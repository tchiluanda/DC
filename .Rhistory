"DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)")) %>%
mutate(Conta = case_when(Conta == "% da DCL sobre a RCL (III/RCL)" ~ "pct_DCL_RCL",
Conta == "DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)" ~"DCL",
Conta == "DÍVIDA CONSOLIDADA - DC (I)" ~ "DC",
Conta == "DEDUÇÕES (II)" ~ "Ded")) %>%
select(REGIAO, Instituicao, Valor, Conta, pop, UF, Escopo, CodMun = Cod.IBGE) %>%
spread(Conta, Valor, fill = 0) %>%
mutate(REGIAO = str_sub(REGIAO, 5)) %>%
left_join(select(perfil_mun, CodMun, nome_mun = `NOME MUNIC`)) %>%
left_join(estados) %>%
filter(`Instituicao` != "Prefeitura Municipal de Itaíba - PE") %>%
mutate(categorias = cut(pct_DCL_RCL, breaks = c(-Inf, 0, 25, 120, Inf),
labels = c("DCL negativa", "Até 25% da RCL", "Até 120% da RCL", "Acima do Limite")),
dcl_pop = DCL / pop,
rank_dcl_pop = rank(-dcl_pop),
rank_pop = rank(-pop),
rank_DC = rank(-DC),
rank_DCL_RCL = rank(-pct_DCL_RCL),
mun_UF = paste0(nome_mun, " - ", UF)) %>%
group_by(REGIAO) %>%
mutate(med_DCL_reg = sum(DCL)/n()) %>%
ungroup() %>%
group_by(UF) %>%
mutate(med_DCL_uf = sum(DCL)/n()) %>%
ungroup()
retorna_texto_mun("Curitiba - PR", "nomes")
as.character(retorna_texto_mun("Curitiba - PR", "nomes"))
retorna_texto_mun("Curitiba - PR", "nomes")
retorna_texto_mun <- function(mun, variavel) {
resultado <- sumario_mun %>%
filter(mun_UF == mun) %>%
select(col_interesse = !!sym(variavel)) %>%
mutate(col_interesse = as.character(col_interesse))
return (resultado[1,1])
}
retorna_texto_mun <- function(mun, variavel) {
resultado <- sumario_mun %>%
filter(mun_UF == mun) %>%
select(col_interesse = !!sym(variavel)) %>%
mutate(col_interesse = as.character(col_interesse))
return(as.character(resultado[1,1]))
}
retorna_texto_mun("Manaus - AM", "REGIAO")
retorna_texto_mun("Manaus - AM", "nomes")
t <- plota_swarm("Curitiba - PR")
t
ggplotly(t)
sumario_mun <- tabela_municipios %>%
filter(
Coluna %in% c("Até o 3º Quadrimestre", "Até o 2º Semestre") &
Conta %in% c("% da DCL sobre a RCL (III/RCL)",
"DÍVIDA CONSOLIDADA - DC (I)",
"DEDUÇÕES (II)",
"DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)")) %>%
mutate(Conta = case_when(Conta == "% da DCL sobre a RCL (III/RCL)" ~ "pct_DCL_RCL",
Conta == "DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)" ~ "DCL",
Conta == "DÍVIDA CONSOLIDADA - DC (I)" ~ "DC",
Conta == "DEDUÇÕES (II)" ~ "Ded")) %>%
select(REGIAO, Instituicao, Valor, Conta, pop, UF, Escopo, CodMun = Cod.IBGE) %>%
spread(Conta, Valor, fill = 0) %>%
mutate(REGIAO = str_sub(REGIAO, 5)) %>%
left_join(select(perfil_mun, CodMun, nome_mun = `NOME MUNIC`)) %>%
left_join(estados) %>%
filter(`Instituicao` != "Prefeitura Municipal de Itaíba - PE") %>%
mutate(categorias = cut(pct_DCL_RCL, breaks = c(-Inf, 0, 25, 120, Inf),
labels = c("DCL negativa", "Até 25% da RCL", "Até 120% da RCL", "Acima do Limite")),
dcl_pop = DCL / pop,
rank_dcl_pop = rank(-dcl_pop),
rank_pop = rank(-pop),
rank_DC = rank(-DC),
rank_DCL_RCL = rank(-pct_DCL_RCL),
mun_UF = paste0(nome_mun, " - ", UF)) %>%
group_by(REGIAO) %>%
mutate(med_DCL_reg = sum(DCL)/n()) %>%
ungroup() %>%
group_by(UF) %>%
mutate(med_DCL_uf = sum(DCL)/n()) %>%
ungroup()
sumario_mun <- sumario_mun %>%
group_by(categorias) %>%
summarise(qde = n()) %>%
mutate(posicoes = c(-50, 25, 120, 160)) %>%
right_join(sumario_mun)
sumario_graf_mun <- function(mun) {
sumario_mun %>%
filter(mun_UF == mun) %>%
select(ded = Ded,
dc  = DC,
dcl = DCL,
med_DCL_uf,
med_DCL_reg) %>%
mutate(em_branco = dcl) %>%
gather(-em_branco, -med_DCL_uf, -med_DCL_reg, key = variavel, value = valor_de_verdade)  %>%
gather(med_DCL_uf, med_DCL_reg, key = medias, value = valor_media) %>%
mutate(em_branco = ifelse(variavel == "ded", em_branco, NA)) %>%
gather(em_branco, valor_de_verdade, key = tipo_valor, value = valor) %>%
mutate(valor_media = ifelse(variavel == "dcl" & tipo_valor == "valor_de_verdade", valor_media, NA),
cores = case_when(tipo_valor == "em_branco" ~ "NA",
variavel == "dc" ~ azul,
variavel == "ded" ~ vermelho,
TRUE ~ azul_claro),
tipo_valor = factor(tipo_valor,
levels = c("valor_de_verdade", "em_branco")),
variavel = factor(variavel, levels = rev(c("dc", "ded", "dcl"))),
medias = case_when(medias == "med_DCL_uf" ~ "Média do Estado",
medias == "med_DCL_reg" ~ "Média da Região"))
}
#teste_sp <- sumario_graf_mun("Triunfo - PE")
plota_card_mun <- function(dados) {
ggplot(dados, aes(x = variavel, y = valor, fill = cores)) +
geom_col(position = "stack", width = 0.5) +
geom_tile(aes(y = valor_media), color = azul, width = 0.7, height = 1, linetype = "dotted") +
geom_text(aes(y = valor_media,
label = paste0(medias, "\nR$ ",
format(round(valor_media/1e6, 1), big.mark = ".", decimal.mark = ","), " mi"),
vjust = ifelse(medias == "Média da Região", 2.7, -1.9)), family = "Open Sans Condensed",
size = 3.5, color = "dimgrey", hjust = "inward") +
geom_label(aes(label = ifelse(tipo_valor == "valor_de_verdade" & medias == "Média da Região",
paste0("R$ ", format(round(valor/1e6, 1),
big.mark = ".",
decimal.mark = ","),
" mi"),
NA),
y = valor,
color = cores),
family = "Open Sans", size = 3.5, hjust = "center",
position = "stack", vjust = "center", fill = "white") +
scale_fill_identity() +
scale_color_identity() +
scale_y_continuous(labels=function(x) {format(x/1e6, big.mark = ".", decimal.mark=",", scientific = FALSE)}, expand = expand_scale(mult = c(.05, .1))) +
scale_x_discrete(labels = c("ded" = "Deduções",
"dc"  = "Dívida\nConsolidada",
"dcl" = "Dívida\nConsolidada\nLíquida")) +
labs(x = NULL, y = "R$ milhões") +
coord_flip() +
tema() + theme(axis.text.y = element_text(size = 12)) + theme(axis.line.x = element_line())
}
#plota_card_mun(teste_sp)
# grafio swarm
plota_swarm <- function(mun){
ggplot(sumario_mun, aes(y = pct_DCL_RCL, x = 0)) +
geom_quasirandom(varwidth = TRUE, alpha = 1,
aes(color = ifelse(mun_UF == mun, "destaque", "resto"),
size = ifelse(mun_UF == mun, "destaque", "resto"))) +
geom_text(aes(label = ifelse(mun_UF == mun, paste0(mun_UF,"\nDCL/RCL: ", percent(pct_DCL_RCL/100)), NA)),
position = position_quasirandom(varwidth = TRUE), vjust = -0.5,
hjust = "center", family = "Open Sans", color = "firebrick") +
scale_size_manual(values = c("destaque" = 2.5, "resto" = 0.5)) +
scale_color_manual(values = c("destaque" = "firebrick", "resto" = "lightgray")) +
scale_y_continuous(labels = function(x) {percent(x/100)}, expand = expand_scale(mult = c(0, .15))) +
labs(y = "% DCL / RCL") +
tema() + theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.x = element_blank(), axis.title.x = element_blank()) +
geom_hline(yintercept = 120, linetype = "dotted", color = "dimgrey") +
annotate(geom = "text", y = 125, x = -0.42, family = "Open Sans", label = "Limite (120%)",
size = 2.5, hjust = "inward", vjust = "bottom", color = "dimgrey")
}
retorna_texto_mun <- function(mun, variavel) {
resultado <- sumario_mun %>%
filter(mun_UF == mun) %>%
select(col_interesse = !!sym(variavel)) %>%
mutate(col_interesse = as.character(col_interesse))
return(as.character(resultado[1,1]))
}
install.packages("r2d3")
devtools::install_github("latinr/latinr")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("latinr/latinr")
devtools::install_github("latinr/latinr")
install.packages("glue")
install.packages("glue")
devtools::install_github("latinr/latinr")
install.packages("Rcpp")
install.packages("Rcpp")
devtools::install_github("latinr/latinr")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
#library(ipeaData)
library(extrafont)
font_import(paths = "C:/Users/familia/Downloads/fonts/Varela_Round")
loadfonts()
library(tidyverse)
library(scales)
library(readxl)
#library(ipeaData)
library(extrafont)
library(RColorBrewer)
#library(ckanr)
#library(skimr)
library(shiny)
library(leaflet)
#library(leaflet)
library(ggbeeswarm)
install.packages("ggbeeswarm")
#library(leaflet)
library(ggbeeswarm)
#library(plotly)
library(viridis)
library(ggrepel)
tema <- function(){
theme_minimal() +
theme(
text = element_text(family = "Varela Round", colour = "grey20"),
title = element_text(family = "Lora", face = "bold", size = 10, color = "#1E4C7A"),
plot.subtitle = element_text(color = "grey20", face = "plain", size = 10),
axis.text = element_text(colour = "grey20", size = 8),
plot.caption = element_text(family = "Lora", face = "italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_text(size = 8),
legend.title = element_text(size = 8),
axis.ticks = element_line(size = 0.5),
axis.ticks.length = unit(.25, "cm"),
axis.title = element_text(size = 8, colour = "grey20"),
legend.position = 'none')
}
tema_gif <- function() {
theme(legend.position = 'none',
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.background = element_rect(color = "#f0f5f7", linetype = "solid", size = 2))
}
vermelho <- brewer.pal(3, name = "Set1")[1]
azul <- "#1f476a"
vermelho_claro <- "#ee7576"
azul_claro     <- "#2c90bf" # "#87b1d4"
tres_cores <-c("#F8AC08","#028063","#6E287C")
tres_cores_pasteis <- c("#FECE60","#63BEAF", "#BE8EBF")
cores_temas_TT <- c("#643275", "#03859a", "#1f476a", "#709a2d", "#ba3917")
# problemas de encoding...
estados <- data.frame(
UF = c("AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO"),
nomes = c("Acre", "Alagoas", "Amazonas", "Amapá", "Bahia", "Ceará", "Distrito Federal", "Espírito Santo", "Goias", "Maranhão", "Minas Gerais", "Mato Grosso do Sul", "Mato Grosso", "Pará", "Paraíba","Pernambuco", "Piauí", "Paraná", "Rio de Janeiro", "Rio Grande do Norte", "Rondônia", "Roraima", "Rio Grande do Sul",
"Santa Catarina",  "Sergipe", "São Paulo", "Tocantins"))
# dados estados
tabela_estados <- read.csv2("./dados/finbraRGF_estados.csv", skip = 5) %>%
mutate(Escopo    = "Estados",
Exercicio = 2019)
# dados municípios
perfil_mun <- read_excel("./dados/Base MUNIC 2018.xls", sheet = "Variáveis externas")
# dados municípios
perfil_mun <- read_excel("./dados/Base MUNIC 2018.xlsx", sheet = "Variáveis externas")
# dados municípios
perfil_mun <- read_excel("./dados/Base_MUNIC_2018.xlsx", sheet = "Variáveis externas")
tabela_mun1 <- read.csv2("./dados/finbraRGF_mun.csv", skip = 5)
tabela_mun2 <- read.csv2("./dados/finbraRGF_mun_semestre.csv", skip = 5)
# dados uniao
tabela_uniao <- read.csv2("./dados/finbraRGF_uniao.csv", skip = 5) %>%
mutate(Escopo    = "Uniao",
Exercicio = 2019)
#
save(list = c("tabela_estados", "tabela_uniao", "tabela_mun1", "tabela_mun2", "perfil_mun"), file = "dados.RData")
# bloco para resolver problemas do shiny
# load("dados.RData")
names(tabela_mun1) <- c("Instituicao", "Cod.IBGE", "UF", "PODER", "Populacao", "Coluna",
"Conta", "Valor")
names(tabela_mun2) <- c("Instituicao", "Cod.IBGE", "UF", "PODER", "Populacao", "Coluna",
"Conta", "Valor")
names(tabela_uniao) <- c("Instituicao", "Cod.IBGE", "UF", "PODER", "Populacao", "Coluna",
"Conta", "Valor", "Escopo", "Exercicio")
names(tabela_estados) <- c("Instituicao", "Cod.IBGE", "UF", "PODER", "Populacao", "Coluna",
"Conta", "Valor", "Escopo", "Exercicio")
tabela_mun <- rbind(tabela_mun1, tabela_mun2) %>%
mutate(Escopo    = "Municípios",
Exercicio = 2019)
# população atualizada
pop_UFs <- perfil_mun %>%
group_by(UF, REGIAO) %>%
summarise(pop = sum(`POP EST`))
tabela_estados <- tabela_estados %>%
inner_join(pop_UFs) %>%
mutate(`CLASSE POP` = NA)
tabela_municipios <- perfil_mun %>%
select(Cod.IBGE = CodMun, REGIAO, pop = `POP EST`, `CLASSE POP`) %>%
right_join(tabela_mun)
tabela_municipios <- perfil_mun %>%
select(Cod.IBGE = `Cod Municipio`, REGIAO, pop = `POP EST`, `CLASSE POP`) %>%
right_join(tabela_mun)
tabela_completa <- rbind(tabela_estados, tabela_municipios)
View(tabela_completa)
totalDCL <- function(tabelinhas) {
tabelinhas %>%
filter(Conta == "DÍVIDA CONSOLIDADA - DC (I)" & Coluna == "Até o 3º Quadrimestre") %>%
group_by(Escopo) %>%
summarise(DC = sum(Valor))
}
tabelas <- list(tabela_municipios, tabela_estados, tabela_uniao)
result <- lapply(tabelas, totalDCL)
DCLs_entes <- bind_rows(result)
pop_total_m <- perfil_mun %>%
summarise(qde = n(),
pop = sum(`POP EST`)) %>%
mutate(escopo = "Total")
pop_RGF_m <- tabela_municipios %>%
group_by(Cod.IBGE, pop) %>%
summarise_all(first) %>%
group_by() %>%
summarise(qde = n(),
pop = sum(pop)) %>%
mutate(escopo = "RGF")
abrangencia_m <- rbind(pop_total_m, pop_RGF_m) %>%
gather(qde, pop, key = Variavel, value = Valor) %>%
spread(escopo, value = Valor) %>%
mutate(faltantes = Total - RGF) %>%
gather("RGF":"faltantes", key = categorias, value = Valor) %>%
filter(categorias != "Total") %>%
group_by(Variavel) %>%
mutate(percent = Valor/sum(Valor)) %>%
ungroup()
View(abrangencia_m)
# abrangencia estados
pop_UFs <- perfil_mun %>%
group_by(UF) %>%
summarise(pop = sum(`POP EST`))
pop_brasil <- sum(pop_UFs["pop"])
pop_total_e <- pop_UFs %>%
summarise(qde = n(),
pop = sum(pop)) %>%
mutate(escopo = "Total")
pop_RGF_e <- tabela_estados %>%
group_by(UF) %>%
summarise_all(first) %>%
group_by() %>%
summarise(qde = n(),
pop = sum(pop)) %>%
mutate(escopo = "RGF")
abrangencia_e <- rbind(pop_total_e, pop_RGF_e) %>%
gather(qde, pop, key = Variavel, value = Valor) %>%
spread(escopo, value = Valor) %>%
mutate(faltantes = Total - RGF) %>%
gather("RGF":"faltantes", key = categorias, value = Valor) %>%
filter(categorias != "Total") %>%
group_by(Variavel) %>%
mutate(percent = Valor/sum(Valor)) %>%
ungroup()
View(abrangencia_e)
View(pop_RGF_e)
# dados estados
tabela_estados <- read.csv2("./dados/finbraRGF_estados.csv", skip = 5) %>%
mutate(Escopo    = "Estados",
Exercicio = 2019)
#
save(list = c("tabela_estados", "tabela_uniao", "tabela_mun1", "tabela_mun2", "perfil_mun"), file = "dados.RData")
View(pop_UFs)
View(perfil_mun)
# população atualizada
pop_UFs <- perfil_mun %>%
group_by(UF, REGIAO) %>%
summarise(pop = sum(`POP EST`))
tabela_estados <- tabela_estados %>%
inner_join(pop_UFs) %>%
mutate(`CLASSE POP` = NA)
# dados estados
tabela_estados_raw <- read.csv2("./dados/finbraRGF_estados.csv", skip = 5) %>%
mutate(Escopo    = "Estados",
Exercicio = 2019)
names(tabela_estados_raw) <- c("Instituicao", "Cod.IBGE", "UF", "PODER", "Populacao", "Coluna",
"Conta", "Valor", "Escopo", "Exercicio")
View(pop_UFs)
View(tabela_estados_raw)
tabela_estados <- tabela_estados_raw %>%
left_join(estados)
View(tabela_estados)
tabela_estados <- tabela_estados_raw %>%
left_join(estados) %>%
rename(siglaUF = UF,
UF = nomes)
tabela_estados <- tabela_estados_raw %>%
left_join(estados) %>%
rename(siglaUF = UF,
UF = nomes) %>%
inner_join(pop_UFs) %>%
mutate(`CLASSE POP` = NA)
tabela_municipios <- perfil_mun %>%
select(Cod.IBGE = `Cod Municipio`, REGIAO, pop = `POP EST`, `CLASSE POP`) %>%
right_join(tabela_mun)
tabela_completa <- rbind(tabela_estados, tabela_municipios)
View(tabela_municipios)
tabela_estados <- tabela_estados_raw %>%
left_join(estados) %>%
rename(siglaUF = UF,
UF = nomes) %>%
inner_join(pop_UFs) %>%
mutate(`CLASSE POP` = NA) %>%
select(-siglaUF)
tabela_municipios <- perfil_mun %>%
select(Cod.IBGE = `Cod Municipio`, REGIAO, pop = `POP EST`, `CLASSE POP`) %>%
right_join(tabela_mun)
tabela_completa <- rbind(tabela_estados, tabela_municipios)
totalDCL <- function(tabelinhas) {
tabelinhas %>%
filter(Conta == "DÍVIDA CONSOLIDADA - DC (I)" & Coluna == "Até o 3º Quadrimestre") %>%
group_by(Escopo) %>%
summarise(DC = sum(Valor))
}
tabelas <- list(tabela_municipios, tabela_estados, tabela_uniao)
result <- lapply(tabelas, totalDCL)
DCLs_entes <- bind_rows(result)
pop_total_m <- perfil_mun %>%
summarise(qde = n(),
pop = sum(`POP EST`)) %>%
mutate(escopo = "Total")
pop_RGF_m <- tabela_municipios %>%
group_by(Cod.IBGE, pop) %>%
summarise_all(first) %>%
group_by() %>%
summarise(qde = n(),
pop = sum(pop)) %>%
mutate(escopo = "RGF")
abrangencia_m <- rbind(pop_total_m, pop_RGF_m) %>%
gather(qde, pop, key = Variavel, value = Valor) %>%
spread(escopo, value = Valor) %>%
mutate(faltantes = Total - RGF) %>%
gather("RGF":"faltantes", key = categorias, value = Valor) %>%
filter(categorias != "Total") %>%
group_by(Variavel) %>%
mutate(percent = Valor/sum(Valor)) %>%
ungroup()
# abrangencia estados
pop_UFs <- perfil_mun %>%
group_by(UF) %>%
summarise(pop = sum(`POP EST`))
pop_brasil <- sum(pop_UFs["pop"])
pop_total_e <- pop_UFs %>%
summarise(qde = n(),
pop = sum(pop)) %>%
mutate(escopo = "Total")
pop_RGF_e <- tabela_estados %>%
group_by(UF) %>%
summarise_all(first) %>%
group_by() %>%
summarise(qde = n(),
pop = sum(pop)) %>%
mutate(escopo = "RGF")
abrangencia_e <- rbind(pop_total_e, pop_RGF_e) %>%
gather(qde, pop, key = Variavel, value = Valor) %>%
spread(escopo, value = Valor) %>%
mutate(faltantes = Total - RGF) %>%
gather("RGF":"faltantes", key = categorias, value = Valor) %>%
filter(categorias != "Total") %>%
group_by(Variavel) %>%
mutate(percent = Valor/sum(Valor)) %>%
ungroup()
View(abrangencia_e)
View(abrangencia_e)
rbind(pop_total_e, pop_RGF_e) %>%
gather(qde, pop, key = Variavel, value = Valor)
tabela_estados %>% group_by(UF) %>% summarise()
tabela_estados %>% group_by(UF) %>% summarise() %>% anti_join(estados)
tabela_estados %>% group_by(UF) %>% summarise() %>% right_join(estados)
tabela_estados %>% group_by(UF) %>% summarise() %>% anti_join(estados)
tabela_estados %>% group_by(UF) %>% summarise()
estados
tabela_estados %>% group_by(UF) %>% summarise() %>% anti_join(estados, by = c("nomes" = "UF"))
tabela_estados %>% group_by(UF) %>% summarise() %>% anti_join(estados, by = c("UF" = "nomes"))
anti_join(estados, tabela_estados %>% group_by(UF) %>% summarise(), by = c("nomes" = "UF"))
View(pop_RGF_e)
View(pop_UFs)
anti_join(pop_UFs, tabela_estados %>% group_by(UF) %>% summarise())
DCLs_entes <- DCLs_entes %>% mutate(DC_pop = DC / pop_brasil)
ggplot(DCLs_entes, aes(y = DC, x = reorder(Escopo, DC), fill = Escopo, color = Escopo)) +
geom_col() +
geom_text(aes(y = DC + 1e11, label = paste0(
format(round(DC/1e9,0), big.mark = ".", decimal.mark = ","),
" bi")), family = "Open Sans", hjust = "left", size = 3.5) +
scale_fill_manual(values = tres_cores) +
scale_color_manual(values = tres_cores) +
scale_y_continuous(labels=function(x) {format(x/1e9, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
expand_limits(y = max(DCLs_entes$DC * 1.2)) +
labs(x = NULL, y = "R$ bi", title = "Dívida Consolidada dos níveis de Governo",
subtitle = "Alguns estados e muitos municípios não estão incluídos (ver \"Abrangência\")") +
coord_flip() +
tema()
ggplot(DCLs_entes, aes(y = DC, x = reorder(Escopo, DC), fill = Escopo, color = Escopo)) +
geom_col() +
geom_text(aes(y = DC + 1e11, label = paste0(
format(round(DC/1e9,0), big.mark = ".", decimal.mark = ","),
" bi")), family = "Open Sans", hjust = "left", size = 3.5) +
scale_fill_manual(values = tres_cores) +
scale_color_manual(values = tres_cores) +
scale_y_continuous(labels=function(x) {format(x/1e9, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
expand_limits(y = max(DCLs_entes$DC * 1.2)) +
labs(x = NULL, y = "R$ bi", title = "Dívida Consolidada dos níveis de Governo",
subtitle = "O Estado de Goiás e alguns municípios não estão incluídos (ver \"Abrangência\")") +
coord_flip() +
tema()
graf_abrang_m <- ggplot(abrangencia_m, aes(y = Valor, x = Variavel, fill = categorias)) +
geom_col(position = "fill", width=0.6, color = "white", size = 1) +
geom_text(aes(label = percent(percent), y = percent), family = "Open Sans", color = "white", position = position_stack(vjust = 0.5), size = 3) +
scale_fill_manual(values = c("RGF" = tres_cores[2], "faltantes" = "#02dba9"),
labels = c("faltantes" = "Não declararam", "RGF" = "Declararam")) +
scale_y_continuous(labels = percent) +
scale_x_discrete(labels = c("qde" = "Quantidade \nde municípios",
"pop" = "População \ncontemplada")) +
coord_flip() +
labs(x = NULL, y = NULL,
title = "Abrangência das informações municipais",
fill = NULL) +
tema() + theme(legend.position = "bottom")
graf_abrang_e
graf_abrang_m
fonts()
knitr::opts_chunk$set(echo = TRUE)
library(r2d3)
install.packages('r2d3')
