axis.text.x = element_blank(), axis.title.x = element_blank()) +
geom_hline(yintercept = 120, linetype = "dotted", color = paleta_swarm[1]) +
annotate(geom = "text", y = 125, x = -0.42, family = "Open Sans", label = "Limite (120%)",
size = 2.5, hjust = "inward", vjust = "bottom")
ggplot(sumario_mun, aes(y = pct_DCL_RCL, x = 0)) +
geom_quasirandom(varwidth = TRUE, alpha = 1,
aes(color = ifelse(mun_UF == "Carambeí - PR", "destaque", "resto"),
size = ifelse(mun_UF == "Carambeí - PR", "destaque", "resto"))) +
geom_text(aes(label = ifelse(mun_UF == "Carambeí - PR", paste0(mun_UF,"\n", percent(pct_DCL_RCL/100)), NA)), position = position_quasirandom(), vjust = -1, family = "Open Sans", color = "firebrick") +
scale_size_manual(values = c("destaque" = 2.5, "resto" = 0.5)) +
scale_color_manual(values = c("destaque" = "firebrick", "resto" = "lightgray")) +
#scale_color_viridis_d(option = "D") +
#scale_color_manual(values = c("yellow" = "yellow", "TRUE" = "dodgerblue", "FALSE" = "firebrick")) +
scale_y_continuous(labels = function(x) {percent(x/100)}) +
labs(y = "% DCL / RCL", title = "Distribuição dos municípios em 2018",
subtitle = "Segundo o percentual de sua DCL em relação à RCL") +
tema() + theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.x = element_blank(), axis.title.x = element_blank()) +
geom_hline(yintercept = 120, linetype = "dotted", color = paleta_swarm[1]) +
annotate(geom = "text", y = 125, x = -0.42, family = "Open Sans", label = "Limite (120%)",
size = 2.5, hjust = "inward", vjust = "bottom")
ggplot(sumario_mun, aes(y = pct_DCL_RCL, x = 0)) +
geom_quasirandom(varwidth = TRUE, alpha = 1,
aes(color = ifelse(mun_UF == "Carambeí - PR", "destaque", "resto"),
size = ifelse(mun_UF == "Carambeí - PR", "destaque", "resto"))) +
geom_text(aes(label = ifelse(mun_UF == "Carambeí - PR", paste0(mun_UF,"\nDCL/RCL: ", percent(pct_DCL_RCL/100)), NA)), position = position_quasirandom(), vjust = -0.5, family = "Open Sans", color = "firebrick") +
scale_size_manual(values = c("destaque" = 2.5, "resto" = 0.5)) +
scale_color_manual(values = c("destaque" = "firebrick", "resto" = "lightgray")) +
#scale_color_viridis_d(option = "D") +
#scale_color_manual(values = c("yellow" = "yellow", "TRUE" = "dodgerblue", "FALSE" = "firebrick")) +
scale_y_continuous(labels = function(x) {percent(x/100)}) +
labs(y = "% DCL / RCL", title = "Distribuição dos municípios em 2018",
subtitle = "Segundo o percentual de sua DCL em relação à RCL") +
tema() + theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.x = element_blank(), axis.title.x = element_blank()) +
geom_hline(yintercept = 120, linetype = "dotted", color = paleta_swarm[1]) +
annotate(geom = "text", y = 125, x = -0.42, family = "Open Sans", label = "Limite (120%)",
size = 2.5, hjust = "inward", vjust = "bottom")
ggplot(sumario_mun, aes(y = pct_DCL_RCL, x = 0)) +
geom_quasirandom(varwidth = TRUE, alpha = 1,
aes(color = ifelse(mun_UF == "Carambeí - PR", "destaque", "resto"),
size = ifelse(mun_UF == "Carambeí - PR", "destaque", "resto"))) +
geom_text(aes(label = ifelse(mun_UF == "Carambeí - PR", paste0(mun_UF,"\nDCL/RCL: ", percent(pct_DCL_RCL/100)), NA)), position = position_quasirandom(), vjust = -0.5, family = "Open Sans", color = "firebrick") +
scale_size_manual(values = c("destaque" = 2.5, "resto" = 0.5)) +
scale_color_manual(values = c("destaque" = "firebrick", "resto" = "lightgray")) +
#scale_color_viridis_d(option = "D") +
#scale_color_manual(values = c("yellow" = "yellow", "TRUE" = "dodgerblue", "FALSE" = "firebrick")) +
scale_y_continuous(labels = function(x) {percent(x/100)}) +
labs(y = "% DCL / RCL") +
tema() + theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.x = element_blank(), axis.title.x = element_blank()) +
geom_hline(yintercept = 120, linetype = "dotted", color = paleta_swarm[1]) +
annotate(geom = "text", y = 125, x = -0.42, family = "Open Sans", label = "Limite (120%)",
size = 2.5, hjust = "inward", vjust = "bottom")
plota_swarm <- function(mun){
ggplot(sumario_mun, aes(y = pct_DCL_RCL, x = 0)) +
geom_quasirandom(varwidth = TRUE, alpha = 1,
aes(color = ifelse(mun_UF == mun, "destaque", "resto"),
size = ifelse(mun_UF == mun, "destaque", "resto"))) +
geom_text(aes(label = ifelse(mun_UF == mun, paste0(mun_UF,"\nDCL/RCL: ", percent(pct_DCL_RCL/100)), NA)), position = position_quasirandom(), vjust = -0.5, family = "Open Sans", color = "firebrick") +
scale_size_manual(values = c("destaque" = 2.5, "resto" = 0.5)) +
scale_color_manual(values = c("destaque" = "firebrick", "resto" = "lightgray")) +
scale_y_continuous(labels = function(x) {percent(x/100)}) +
labs(y = "% DCL / RCL") +
tema() + theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.x = element_blank(), axis.title.x = element_blank()) +
geom_hline(yintercept = 120, linetype = "dotted", color = paleta_swarm[1]) +
annotate(geom = "text", y = 125, x = -0.42, family = "Open Sans", label = "Limite (120%)",
size = 2.5, hjust = "inward", vjust = "bottom")
}
retorna_texto_mun <- function(mun, variavel) {
resultado <- sumario_mun %>%
filter(mun_UF == mun) %>%
select(!!sym(variavel))
return (as.character(resultado[1,1]))
}
sumario_mun <- tabela_municipios %>%
filter(
Coluna %in% c("Até o 3º Quadrimestre", "Até o 2º Semestre") &
Conta %in% c("% da DCL sobre a RCL (III/RCL)",
"DÍVIDA CONSOLIDADA - DC (I)",
"DEDUÇÕES (II)",
"DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)")) %>%
mutate(Conta = case_when(Conta == "% da DCL sobre a RCL (III/RCL)" ~ "pct_DCL_RCL",
Conta == "DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)" ~"DCL",
Conta == "DÍVIDA CONSOLIDADA - DC (I)" ~ "DC",
Conta == "DEDUÇÕES (II)" ~ "Ded")) %>%
select(REGIAO, Instituicao, Valor, Conta, pop, UF, Escopo, CodMun = Cod.IBGE) %>%
spread(Conta, Valor, fill = 0) %>%
mutate(REGIAO = str_sub(REGIAO, 5)) %>%
left_join(select(perfil_mun, CodMun, nome_mun = `NOME MUNIC`)) %>%
filter(`Instituicao` != "Prefeitura Municipal de Itaíba - PE") %>%
mutate(categorias = cut(pct_DCL_RCL, breaks = c(-Inf, 0, 25, 120, Inf),
labels = c("DCL negativa", "Até 25% da RCL", "Até 120% da RCL", "Acima do Limite")),
dcl_pop = DCP / pop,
rank_dcl_pop = rank(-dcl_pop),
rank_pop = rank(-pop),
rank_DC = rank(-DC),
rank_DCL_RCL = rank(-pct_DCL_RCL),
mun_UF = paste0(nome_mun, " - ", UF)) %>%
group_by(REGIAO) %>%
mutate(med_DCL_reg = sum(DCL)/n()) %>%
ungroup() %>%
group_by(UF) %>%
mutate(med_DCL_uf = sum(DCL)/n()) %>%
ungroup()
sumario_mun <- sumario_mun %>%
group_by(categorias) %>%
summarise(qde = n()) %>%
mutate(posicoes = c(-50, 25, 120, 160)) %>%
right_join(sumario_mun)
sumario_graf_mun <- function(mun) {
sumario_mun %>%
filter(mun_UF == mun) %>%
select(ded = Ded,
dc  = DC,
dcl = DCL,
med_DCL_uf,
med_DCL_reg) %>%
mutate(em_branco = dcl) %>%
gather(-em_branco, -med_DCL_uf, -med_DCL_reg, key = variavel, value = valor_de_verdade)  %>%
gather(med_DCL_uf, med_DCL_reg, key = medias, value = valor_media) %>%
mutate(em_branco = ifelse(variavel == "ded", em_branco, NA)) %>%
gather(em_branco, valor_de_verdade, key = tipo_valor, value = valor) %>%
mutate(valor_media = ifelse(variavel == "dcl" & tipo_valor == "valor_de_verdade", valor_media, NA),
cores = case_when(tipo_valor == "em_branco" ~ "NA",
variavel == "dc" ~ azul,
variavel == "ded" ~ vermelho,
TRUE ~ azul_claro),
tipo_valor = factor(tipo_valor,
levels = c("valor_de_verdade", "em_branco")),
variavel = factor(variavel, levels = rev(c("dc", "ded", "dcl"))),
medias = case_when(medias == "med_DCL_uf" ~ "Média do Estado",
medias == "med_DCL_reg" ~ "Média da Região"))
}
plota_card_mun <- function(dados) {
ggplot(dados, aes(x = variavel, y = valor, fill = cores)) +
geom_col(position = "stack", width = 0.5) +
geom_tile(aes(y = valor_media), color = azul, width = 0.7, height = 1, linetype = "dotted") +
geom_text(aes(y = valor_media,
label = paste0(medias, "\nR$ ",
format(round(valor_media/1e6, 1), big.mark = ".", decimal.mark = ","), " mi"),
vjust = ifelse(medias == "Média da Região", 2.7, -1.9)), family = "Open Sans Condensed",
size = 3.5, color = "dimgrey", hjust = "inward") +
geom_label(aes(label = ifelse(tipo_valor == "valor_de_verdade" & medias == "Média da Região",
paste0("R$ ", format(round(valor/1e6, 1),
big.mark = ".",
decimal.mark = ","),
" mi"),
NA),
y = valor,
color = cores),
family = "Open Sans", size = 3.5, hjust = "center",
position = "stack", vjust = "center", fill = "white") +
scale_fill_identity() +
scale_color_identity() +
scale_y_continuous(labels=function(x) {format(x/1e6, big.mark = ".", decimal.mark=",", scientific = FALSE)}, expand = expand_scale(mult = c(.05, .1))) +
scale_x_discrete(labels = c("ded" = "Deduções",
"dc"  = "Dívida\nConsolidada",
"dcl" = "Dívida\nConsolidada\nLíquida")) +
labs(x = NULL, y = "R$ milhões") +
coord_flip() +
tema() + theme(axis.text.y = element_text(size = 12)) + theme(axis.line.x = element_line())
}
plota_swarm <- function(mun){
ggplot(sumario_mun, aes(y = pct_DCL_RCL, x = 0)) +
geom_quasirandom(varwidth = TRUE, alpha = 1,
aes(color = ifelse(mun_UF == mun, "destaque", "resto"),
size = ifelse(mun_UF == mun, "destaque", "resto"))) +
geom_text(aes(label = ifelse(mun_UF == mun, paste0(mun_UF,"\nDCL/RCL: ", percent(pct_DCL_RCL/100)), NA)), position = position_quasirandom(), vjust = -0.5, family = "Open Sans", color = "firebrick") +
scale_size_manual(values = c("destaque" = 2.5, "resto" = 0.5)) +
scale_color_manual(values = c("destaque" = "firebrick", "resto" = "lightgray")) +
scale_y_continuous(labels = function(x) {percent(x/100)}) +
labs(y = "% DCL / RCL") +
tema() + theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.x = element_blank(), axis.title.x = element_blank()) +
geom_hline(yintercept = 120, linetype = "dotted", color = "dimgrey") +
annotate(geom = "text", y = 125, x = -0.42, family = "Open Sans", label = "Limite (120%)",
size = 2.5, hjust = "inward", vjust = "bottom", color = "dimgrey")
}
retorna_texto_mun <- function(mun, variavel) {
resultado <- sumario_mun %>%
filter(mun_UF == mun) %>%
select(!!sym(variavel))
return (as.character(resultado[1,1]))
}
View(sumario_mun)
knitr::opts_chunk$set(echo = FALSE)
sumario_mun <- tabela_municipios %>%
filter(
Coluna %in% c("Até o 3º Quadrimestre", "Até o 2º Semestre") &
Conta %in% c("% da DCL sobre a RCL (III/RCL)",
"DÍVIDA CONSOLIDADA - DC (I)",
"DEDUÇÕES (II)",
"DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)")) %>%
mutate(Conta = case_when(Conta == "% da DCL sobre a RCL (III/RCL)" ~ "pct_DCL_RCL",
Conta == "DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)" ~"DCL",
Conta == "DÍVIDA CONSOLIDADA - DC (I)" ~ "DC",
Conta == "DEDUÇÕES (II)" ~ "Ded")) %>%
select(REGIAO, Instituicao, Valor, Conta, pop, UF, Escopo, CodMun = Cod.IBGE) %>%
spread(Conta, Valor, fill = 0) %>%
mutate(REGIAO = str_sub(REGIAO, 5)) %>%
left_join(select(perfil_mun, CodMun, nome_mun = `NOME MUNIC`)) %>%
filter(`Instituicao` != "Prefeitura Municipal de Itaíba - PE") %>%
mutate(categorias = cut(pct_DCL_RCL, breaks = c(-Inf, 0, 25, 120, Inf),
labels = c("DCL negativa", "Até 25% da RCL", "Até 120% da RCL", "Acima do Limite")),
dcl_pop = DCP / pop,
rank_dcl_pop = rank(-dcl_pop),
rank_pop = rank(-pop),
rank_DC = rank(-DC),
rank_DCL_RCL = rank(-pct_DCL_RCL),
mun_UF = paste0(nome_mun, " - ", UF)) %>%
group_by(REGIAO) %>%
mutate(med_DCL_reg = sum(DCL)/n()) %>%
ungroup() %>%
group_by(UF) %>%
mutate(med_DCL_uf = sum(DCL)/n()) %>%
ungroup()
sumario_mun <- tabela_municipios %>%
filter(
Coluna %in% c("Até o 3º Quadrimestre", "Até o 2º Semestre") &
Conta %in% c("% da DCL sobre a RCL (III/RCL)",
"DÍVIDA CONSOLIDADA - DC (I)",
"DEDUÇÕES (II)",
"DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)")) %>%
mutate(Conta = case_when(Conta == "% da DCL sobre a RCL (III/RCL)" ~ "pct_DCL_RCL",
Conta == "DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)" ~"DCL",
Conta == "DÍVIDA CONSOLIDADA - DC (I)" ~ "DC",
Conta == "DEDUÇÕES (II)" ~ "Ded")) %>%
select(REGIAO, Instituicao, Valor, Conta, pop, UF, Escopo, CodMun = Cod.IBGE) %>%
spread(Conta, Valor, fill = 0) %>%
mutate(REGIAO = str_sub(REGIAO, 5)) %>%
left_join(select(perfil_mun, CodMun, nome_mun = `NOME MUNIC`)) %>%
filter(`Instituicao` != "Prefeitura Municipal de Itaíba - PE") %>%
mutate(categorias = cut(pct_DCL_RCL, breaks = c(-Inf, 0, 25, 120, Inf),
labels = c("DCL negativa", "Até 25% da RCL", "Até 120% da RCL", "Acima do Limite")),
dcl_pop = DCL / pop,
rank_dcl_pop = rank(-dcl_pop),
rank_pop = rank(-pop),
rank_DC = rank(-DC),
rank_DCL_RCL = rank(-pct_DCL_RCL),
mun_UF = paste0(nome_mun, " - ", UF)) %>%
group_by(REGIAO) %>%
mutate(med_DCL_reg = sum(DCL)/n()) %>%
ungroup() %>%
group_by(UF) %>%
mutate(med_DCL_uf = sum(DCL)/n()) %>%
ungroup()
sumario_mun <- sumario_mun %>%
group_by(categorias) %>%
summarise(qde = n()) %>%
mutate(posicoes = c(-50, 25, 120, 160)) %>%
right_join(sumario_mun)
sumario_graf_mun <- function(mun) {
sumario_mun %>%
filter(mun_UF == mun) %>%
select(ded = Ded,
dc  = DC,
dcl = DCL,
med_DCL_uf,
med_DCL_reg) %>%
mutate(em_branco = dcl) %>%
gather(-em_branco, -med_DCL_uf, -med_DCL_reg, key = variavel, value = valor_de_verdade)  %>%
gather(med_DCL_uf, med_DCL_reg, key = medias, value = valor_media) %>%
mutate(em_branco = ifelse(variavel == "ded", em_branco, NA)) %>%
gather(em_branco, valor_de_verdade, key = tipo_valor, value = valor) %>%
mutate(valor_media = ifelse(variavel == "dcl" & tipo_valor == "valor_de_verdade", valor_media, NA),
cores = case_when(tipo_valor == "em_branco" ~ "NA",
variavel == "dc" ~ azul,
variavel == "ded" ~ vermelho,
TRUE ~ azul_claro),
tipo_valor = factor(tipo_valor,
levels = c("valor_de_verdade", "em_branco")),
variavel = factor(variavel, levels = rev(c("dc", "ded", "dcl"))),
medias = case_when(medias == "med_DCL_uf" ~ "Média do Estado",
medias == "med_DCL_reg" ~ "Média da Região"))
}
plota_card_mun <- function(dados) {
ggplot(dados, aes(x = variavel, y = valor, fill = cores)) +
geom_col(position = "stack", width = 0.5) +
geom_tile(aes(y = valor_media), color = azul, width = 0.7, height = 1, linetype = "dotted") +
geom_text(aes(y = valor_media,
label = paste0(medias, "\nR$ ",
format(round(valor_media/1e6, 1), big.mark = ".", decimal.mark = ","), " mi"),
vjust = ifelse(medias == "Média da Região", 2.7, -1.9)), family = "Open Sans Condensed",
size = 3.5, color = "dimgrey", hjust = "inward") +
geom_label(aes(label = ifelse(tipo_valor == "valor_de_verdade" & medias == "Média da Região",
paste0("R$ ", format(round(valor/1e6, 1),
big.mark = ".",
decimal.mark = ","),
" mi"),
NA),
y = valor,
color = cores),
family = "Open Sans", size = 3.5, hjust = "center",
position = "stack", vjust = "center", fill = "white") +
scale_fill_identity() +
scale_color_identity() +
scale_y_continuous(labels=function(x) {format(x/1e6, big.mark = ".", decimal.mark=",", scientific = FALSE)}, expand = expand_scale(mult = c(.05, .1))) +
scale_x_discrete(labels = c("ded" = "Deduções",
"dc"  = "Dívida\nConsolidada",
"dcl" = "Dívida\nConsolidada\nLíquida")) +
labs(x = NULL, y = "R$ milhões") +
coord_flip() +
tema() + theme(axis.text.y = element_text(size = 12)) + theme(axis.line.x = element_line())
}
plota_swarm <- function(mun){
ggplot(sumario_mun, aes(y = pct_DCL_RCL, x = 0)) +
geom_quasirandom(varwidth = TRUE, alpha = 1,
aes(color = ifelse(mun_UF == mun, "destaque", "resto"),
size = ifelse(mun_UF == mun, "destaque", "resto"))) +
geom_text(aes(label = ifelse(mun_UF == mun, paste0(mun_UF,"\nDCL/RCL: ", percent(pct_DCL_RCL/100)), NA)), position = position_quasirandom(), vjust = -0.5, family = "Open Sans", color = "firebrick") +
scale_size_manual(values = c("destaque" = 2.5, "resto" = 0.5)) +
scale_color_manual(values = c("destaque" = "firebrick", "resto" = "lightgray")) +
scale_y_continuous(labels = function(x) {percent(x/100)}) +
labs(y = "% DCL / RCL") +
tema() + theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.x = element_blank(), axis.title.x = element_blank()) +
geom_hline(yintercept = 120, linetype = "dotted", color = "dimgrey") +
annotate(geom = "text", y = 125, x = -0.42, family = "Open Sans", label = "Limite (120%)",
size = 2.5, hjust = "inward", vjust = "bottom", color = "dimgrey")
}
retorna_texto_mun <- function(mun, variavel) {
resultado <- sumario_mun %>%
filter(mun_UF == mun) %>%
select(!!sym(variavel))
return (as.character(resultado[1,1]))
}
estados
View(sumario_mun)
sumario_mun <- tabela_municipios %>%
filter(
Coluna %in% c("Até o 3º Quadrimestre", "Até o 2º Semestre") &
Conta %in% c("% da DCL sobre a RCL (III/RCL)",
"DÍVIDA CONSOLIDADA - DC (I)",
"DEDUÇÕES (II)",
"DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)")) %>%
mutate(Conta = case_when(Conta == "% da DCL sobre a RCL (III/RCL)" ~ "pct_DCL_RCL",
Conta == "DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)" ~"DCL",
Conta == "DÍVIDA CONSOLIDADA - DC (I)" ~ "DC",
Conta == "DEDUÇÕES (II)" ~ "Ded")) %>%
select(REGIAO, Instituicao, Valor, Conta, pop, UF, Escopo, CodMun = Cod.IBGE) %>%
spread(Conta, Valor, fill = 0) %>%
mutate(REGIAO = str_sub(REGIAO, 5)) %>%
left_join(select(perfil_mun, CodMun, nome_mun = `NOME MUNIC`)) %>%
left_join(estados) %>%
filter(`Instituicao` != "Prefeitura Municipal de Itaíba - PE") %>%
mutate(categorias = cut(pct_DCL_RCL, breaks = c(-Inf, 0, 25, 120, Inf),
labels = c("DCL negativa", "Até 25% da RCL", "Até 120% da RCL", "Acima do Limite")),
dcl_pop = DCL / pop,
rank_dcl_pop = rank(-dcl_pop),
rank_pop = rank(-pop),
rank_DC = rank(-DC),
rank_DCL_RCL = rank(-pct_DCL_RCL),
mun_UF = paste0(nome_mun, " - ", UF)) %>%
group_by(REGIAO) %>%
mutate(med_DCL_reg = sum(DCL)/n()) %>%
ungroup() %>%
group_by(UF) %>%
mutate(med_DCL_uf = sum(DCL)/n()) %>%
ungroup()
retorna_texto_mun("Curitiba - PR", "nomes")
as.character(retorna_texto_mun("Curitiba - PR", "nomes"))
retorna_texto_mun("Curitiba - PR", "nomes")
retorna_texto_mun <- function(mun, variavel) {
resultado <- sumario_mun %>%
filter(mun_UF == mun) %>%
select(col_interesse = !!sym(variavel)) %>%
mutate(col_interesse = as.character(col_interesse))
return (resultado[1,1])
}
retorna_texto_mun <- function(mun, variavel) {
resultado <- sumario_mun %>%
filter(mun_UF == mun) %>%
select(col_interesse = !!sym(variavel)) %>%
mutate(col_interesse = as.character(col_interesse))
return(as.character(resultado[1,1]))
}
retorna_texto_mun("Manaus - AM", "REGIAO")
retorna_texto_mun("Manaus - AM", "nomes")
t <- plota_swarm("Curitiba - PR")
t
ggplotly(t)
sumario_mun <- tabela_municipios %>%
filter(
Coluna %in% c("Até o 3º Quadrimestre", "Até o 2º Semestre") &
Conta %in% c("% da DCL sobre a RCL (III/RCL)",
"DÍVIDA CONSOLIDADA - DC (I)",
"DEDUÇÕES (II)",
"DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)")) %>%
mutate(Conta = case_when(Conta == "% da DCL sobre a RCL (III/RCL)" ~ "pct_DCL_RCL",
Conta == "DÍVIDA CONSOLIDADA LÍQUIDA (DCL) (III) = (I - II)" ~ "DCL",
Conta == "DÍVIDA CONSOLIDADA - DC (I)" ~ "DC",
Conta == "DEDUÇÕES (II)" ~ "Ded")) %>%
select(REGIAO, Instituicao, Valor, Conta, pop, UF, Escopo, CodMun = Cod.IBGE) %>%
spread(Conta, Valor, fill = 0) %>%
mutate(REGIAO = str_sub(REGIAO, 5)) %>%
left_join(select(perfil_mun, CodMun, nome_mun = `NOME MUNIC`)) %>%
left_join(estados) %>%
filter(`Instituicao` != "Prefeitura Municipal de Itaíba - PE") %>%
mutate(categorias = cut(pct_DCL_RCL, breaks = c(-Inf, 0, 25, 120, Inf),
labels = c("DCL negativa", "Até 25% da RCL", "Até 120% da RCL", "Acima do Limite")),
dcl_pop = DCL / pop,
rank_dcl_pop = rank(-dcl_pop),
rank_pop = rank(-pop),
rank_DC = rank(-DC),
rank_DCL_RCL = rank(-pct_DCL_RCL),
mun_UF = paste0(nome_mun, " - ", UF)) %>%
group_by(REGIAO) %>%
mutate(med_DCL_reg = sum(DCL)/n()) %>%
ungroup() %>%
group_by(UF) %>%
mutate(med_DCL_uf = sum(DCL)/n()) %>%
ungroup()
sumario_mun <- sumario_mun %>%
group_by(categorias) %>%
summarise(qde = n()) %>%
mutate(posicoes = c(-50, 25, 120, 160)) %>%
right_join(sumario_mun)
sumario_graf_mun <- function(mun) {
sumario_mun %>%
filter(mun_UF == mun) %>%
select(ded = Ded,
dc  = DC,
dcl = DCL,
med_DCL_uf,
med_DCL_reg) %>%
mutate(em_branco = dcl) %>%
gather(-em_branco, -med_DCL_uf, -med_DCL_reg, key = variavel, value = valor_de_verdade)  %>%
gather(med_DCL_uf, med_DCL_reg, key = medias, value = valor_media) %>%
mutate(em_branco = ifelse(variavel == "ded", em_branco, NA)) %>%
gather(em_branco, valor_de_verdade, key = tipo_valor, value = valor) %>%
mutate(valor_media = ifelse(variavel == "dcl" & tipo_valor == "valor_de_verdade", valor_media, NA),
cores = case_when(tipo_valor == "em_branco" ~ "NA",
variavel == "dc" ~ azul,
variavel == "ded" ~ vermelho,
TRUE ~ azul_claro),
tipo_valor = factor(tipo_valor,
levels = c("valor_de_verdade", "em_branco")),
variavel = factor(variavel, levels = rev(c("dc", "ded", "dcl"))),
medias = case_when(medias == "med_DCL_uf" ~ "Média do Estado",
medias == "med_DCL_reg" ~ "Média da Região"))
}
#teste_sp <- sumario_graf_mun("Triunfo - PE")
plota_card_mun <- function(dados) {
ggplot(dados, aes(x = variavel, y = valor, fill = cores)) +
geom_col(position = "stack", width = 0.5) +
geom_tile(aes(y = valor_media), color = azul, width = 0.7, height = 1, linetype = "dotted") +
geom_text(aes(y = valor_media,
label = paste0(medias, "\nR$ ",
format(round(valor_media/1e6, 1), big.mark = ".", decimal.mark = ","), " mi"),
vjust = ifelse(medias == "Média da Região", 2.7, -1.9)), family = "Open Sans Condensed",
size = 3.5, color = "dimgrey", hjust = "inward") +
geom_label(aes(label = ifelse(tipo_valor == "valor_de_verdade" & medias == "Média da Região",
paste0("R$ ", format(round(valor/1e6, 1),
big.mark = ".",
decimal.mark = ","),
" mi"),
NA),
y = valor,
color = cores),
family = "Open Sans", size = 3.5, hjust = "center",
position = "stack", vjust = "center", fill = "white") +
scale_fill_identity() +
scale_color_identity() +
scale_y_continuous(labels=function(x) {format(x/1e6, big.mark = ".", decimal.mark=",", scientific = FALSE)}, expand = expand_scale(mult = c(.05, .1))) +
scale_x_discrete(labels = c("ded" = "Deduções",
"dc"  = "Dívida\nConsolidada",
"dcl" = "Dívida\nConsolidada\nLíquida")) +
labs(x = NULL, y = "R$ milhões") +
coord_flip() +
tema() + theme(axis.text.y = element_text(size = 12)) + theme(axis.line.x = element_line())
}
#plota_card_mun(teste_sp)
# grafio swarm
plota_swarm <- function(mun){
ggplot(sumario_mun, aes(y = pct_DCL_RCL, x = 0)) +
geom_quasirandom(varwidth = TRUE, alpha = 1,
aes(color = ifelse(mun_UF == mun, "destaque", "resto"),
size = ifelse(mun_UF == mun, "destaque", "resto"))) +
geom_text(aes(label = ifelse(mun_UF == mun, paste0(mun_UF,"\nDCL/RCL: ", percent(pct_DCL_RCL/100)), NA)),
position = position_quasirandom(varwidth = TRUE), vjust = -0.5,
hjust = "center", family = "Open Sans", color = "firebrick") +
scale_size_manual(values = c("destaque" = 2.5, "resto" = 0.5)) +
scale_color_manual(values = c("destaque" = "firebrick", "resto" = "lightgray")) +
scale_y_continuous(labels = function(x) {percent(x/100)}, expand = expand_scale(mult = c(0, .15))) +
labs(y = "% DCL / RCL") +
tema() + theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.text.x = element_blank(), axis.title.x = element_blank()) +
geom_hline(yintercept = 120, linetype = "dotted", color = "dimgrey") +
annotate(geom = "text", y = 125, x = -0.42, family = "Open Sans", label = "Limite (120%)",
size = 2.5, hjust = "inward", vjust = "bottom", color = "dimgrey")
}
retorna_texto_mun <- function(mun, variavel) {
resultado <- sumario_mun %>%
filter(mun_UF == mun) %>%
select(col_interesse = !!sym(variavel)) %>%
mutate(col_interesse = as.character(col_interesse))
return(as.character(resultado[1,1]))
}
install.packages("r2d3")
devtools::install_github("latinr/latinr")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("latinr/latinr")
devtools::install_github("latinr/latinr")
install.packages("glue")
install.packages("glue")
devtools::install_github("latinr/latinr")
install.packages("Rcpp")
install.packages("Rcpp")
devtools::install_github("latinr/latinr")
